1) Turn the hardware on/Run the software.

2) Do NOT connect an external trigger signal. Set 'Run' in external trigger mode and watch the Console window.

- Buffer Size will toggle between 0 and 1 - This is the command response sequence.
- When the toggling stops, buffer size is going to be 256. (Yes, that's strange. There should NOT be data avaiable as there is no triggering signal)
- Note that the 'Run' button keeps showing 'Run'. It hasn't toggled to 'Stop'. The software is STALLED and it looks like that the FTDI driver did it.

3) Change focus back to the Main Window and plug the external trigger signal @ 5 KHz (the frequency when this was observed).

- Now the 'Run' button should have changed to 'Stop'. The software is not stalled anymore.

4) Press any key on the Console Window to pass thru the getch() on code.

- Note that Buffer Size = block size = 63488. (Yes, that's fine.)

- Waveform must be WRONG. In fact, one byte shifted. This will destroy the byte oriented sample reconstruction.

5) If you Stop/Run, the Waveform is going to be right.



***

Preliminary thoughts:

As written before... There should not be the first 256 bytes without triggering signal. Right after those bytes arrival, 
there softwar gets stalled. So... 

1) Is there any relation with a possible bad behavior of the USB transceiver and the possible FTDI 
driver stall ? 

2) USB transceiver bad behavior is caused by FPGA fail ?

3) Is it possible that the weird 256 bytes block would be related to the command/command response bug ?



- Rafael Gama on 14 of feb. 2012.

